// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/photo/main.proto

/*
Package photo is a generated protocol buffer package.

It is generated from these files:
	proto/photo/main.proto

It has these top-level messages:
	Photo
	GetPhotosRequest
	GetPhotosResponse
	GetPhotoRequest
	GetPhotoResponse
	CreatePhotoRequest
	CreatePhotoResponse
	UpdatePhotoRequest
	UpdatePhotoResponse
	DeletePhotoRequest
	DeletePhotoResponse
*/
package photo

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import grpc_user "github.com/alextanhongpin/go-grpc-event/proto/user"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Photo struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// @inject_tag: bson:"created_at"
	CreatedAt int64 `protobuf:"varint,2,opt,name=created_at,json=createdAt" json:"created_at,omitempty" bson:"created_at"`
	// @inject_tag: bson:"updated_at"
	UpdatedAt int64  `protobuf:"varint,3,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty" bson:"updated_at"`
	Name      string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Src       string `protobuf:"bytes,5,opt,name=src" json:"src,omitempty"`
	Caption   string `protobuf:"bytes,6,opt,name=caption" json:"caption,omitempty"`
	// @inject_tag: bson:"is_published"
	IsPublished bool `protobuf:"varint,7,opt,name=is_published,json=isPublished" json:"is_published,omitempty" bson:"is_published"`
	// @inject_tag: bson:"is_anonymous"
	IsAnonymous bool            `protobuf:"varint,8,opt,name=is_anonymous,json=isAnonymous" json:"is_anonymous,omitempty" bson:"is_anonymous"`
	User        *grpc_user.User `protobuf:"bytes,10,opt,name=user" json:"user,omitempty"`
}

func (m *Photo) Reset()                    { *m = Photo{} }
func (m *Photo) String() string            { return proto.CompactTextString(m) }
func (*Photo) ProtoMessage()               {}
func (*Photo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Photo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Photo) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *Photo) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *Photo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Photo) GetSrc() string {
	if m != nil {
		return m.Src
	}
	return ""
}

func (m *Photo) GetCaption() string {
	if m != nil {
		return m.Caption
	}
	return ""
}

func (m *Photo) GetIsPublished() bool {
	if m != nil {
		return m.IsPublished
	}
	return false
}

func (m *Photo) GetIsAnonymous() bool {
	if m != nil {
		return m.IsAnonymous
	}
	return false
}

func (m *Photo) GetUser() *grpc_user.User {
	if m != nil {
		return m.User
	}
	return nil
}

type GetPhotosRequest struct {
	Query string `protobuf:"bytes,1,opt,name=query" json:"query,omitempty"`
	Page  int64  `protobuf:"varint,2,opt,name=page" json:"page,omitempty"`
	// @inject_tag: bson:"per_page"
	PerPage int64 `protobuf:"varint,3,opt,name=per_page,json=perPage" json:"per_page,omitempty" bson:"per_page"`
}

func (m *GetPhotosRequest) Reset()                    { *m = GetPhotosRequest{} }
func (m *GetPhotosRequest) String() string            { return proto.CompactTextString(m) }
func (*GetPhotosRequest) ProtoMessage()               {}
func (*GetPhotosRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetPhotosRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *GetPhotosRequest) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetPhotosRequest) GetPerPage() int64 {
	if m != nil {
		return m.PerPage
	}
	return 0
}

type GetPhotosResponse struct {
	Data []*Photo `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	// @inject_tag: bson:"total_count"
	TotalCount int64  `protobuf:"varint,2,opt,name=total_count,json=totalCount" json:"total_count,omitempty" bson:"total_count"`
	Next       string `protobuf:"bytes,3,opt,name=next" json:"next,omitempty"`
	Last       string `protobuf:"bytes,4,opt,name=last" json:"last,omitempty"`
	First      string `protobuf:"bytes,5,opt,name=first" json:"first,omitempty"`
	Prev       string `protobuf:"bytes,6,opt,name=prev" json:"prev,omitempty"`
}

func (m *GetPhotosResponse) Reset()                    { *m = GetPhotosResponse{} }
func (m *GetPhotosResponse) String() string            { return proto.CompactTextString(m) }
func (*GetPhotosResponse) ProtoMessage()               {}
func (*GetPhotosResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetPhotosResponse) GetData() []*Photo {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetPhotosResponse) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *GetPhotosResponse) GetNext() string {
	if m != nil {
		return m.Next
	}
	return ""
}

func (m *GetPhotosResponse) GetLast() string {
	if m != nil {
		return m.Last
	}
	return ""
}

func (m *GetPhotosResponse) GetFirst() string {
	if m != nil {
		return m.First
	}
	return ""
}

func (m *GetPhotosResponse) GetPrev() string {
	if m != nil {
		return m.Prev
	}
	return ""
}

type GetPhotoRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetPhotoRequest) Reset()                    { *m = GetPhotoRequest{} }
func (m *GetPhotoRequest) String() string            { return proto.CompactTextString(m) }
func (*GetPhotoRequest) ProtoMessage()               {}
func (*GetPhotoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetPhotoRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetPhotoResponse struct {
	Data *Photo `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (m *GetPhotoResponse) Reset()                    { *m = GetPhotoResponse{} }
func (m *GetPhotoResponse) String() string            { return proto.CompactTextString(m) }
func (*GetPhotoResponse) ProtoMessage()               {}
func (*GetPhotoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetPhotoResponse) GetData() *Photo {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreatePhotoRequest struct {
	Data []*Photo `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
}

func (m *CreatePhotoRequest) Reset()                    { *m = CreatePhotoRequest{} }
func (m *CreatePhotoRequest) String() string            { return proto.CompactTextString(m) }
func (*CreatePhotoRequest) ProtoMessage()               {}
func (*CreatePhotoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CreatePhotoRequest) GetData() []*Photo {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreatePhotoResponse struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *CreatePhotoResponse) Reset()                    { *m = CreatePhotoResponse{} }
func (m *CreatePhotoResponse) String() string            { return proto.CompactTextString(m) }
func (*CreatePhotoResponse) ProtoMessage()               {}
func (*CreatePhotoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *CreatePhotoResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type UpdatePhotoRequest struct {
	Data *Photo `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (m *UpdatePhotoRequest) Reset()                    { *m = UpdatePhotoRequest{} }
func (m *UpdatePhotoRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdatePhotoRequest) ProtoMessage()               {}
func (*UpdatePhotoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *UpdatePhotoRequest) GetData() *Photo {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdatePhotoResponse struct {
	Ok bool `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
}

func (m *UpdatePhotoResponse) Reset()                    { *m = UpdatePhotoResponse{} }
func (m *UpdatePhotoResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdatePhotoResponse) ProtoMessage()               {}
func (*UpdatePhotoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *UpdatePhotoResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type DeletePhotoRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeletePhotoRequest) Reset()                    { *m = DeletePhotoRequest{} }
func (m *DeletePhotoRequest) String() string            { return proto.CompactTextString(m) }
func (*DeletePhotoRequest) ProtoMessage()               {}
func (*DeletePhotoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *DeletePhotoRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeletePhotoResponse struct {
	Ok bool `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
}

func (m *DeletePhotoResponse) Reset()                    { *m = DeletePhotoResponse{} }
func (m *DeletePhotoResponse) String() string            { return proto.CompactTextString(m) }
func (*DeletePhotoResponse) ProtoMessage()               {}
func (*DeletePhotoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *DeletePhotoResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func init() {
	proto.RegisterType((*Photo)(nil), "photo.Photo")
	proto.RegisterType((*GetPhotosRequest)(nil), "photo.GetPhotosRequest")
	proto.RegisterType((*GetPhotosResponse)(nil), "photo.GetPhotosResponse")
	proto.RegisterType((*GetPhotoRequest)(nil), "photo.GetPhotoRequest")
	proto.RegisterType((*GetPhotoResponse)(nil), "photo.GetPhotoResponse")
	proto.RegisterType((*CreatePhotoRequest)(nil), "photo.CreatePhotoRequest")
	proto.RegisterType((*CreatePhotoResponse)(nil), "photo.CreatePhotoResponse")
	proto.RegisterType((*UpdatePhotoRequest)(nil), "photo.UpdatePhotoRequest")
	proto.RegisterType((*UpdatePhotoResponse)(nil), "photo.UpdatePhotoResponse")
	proto.RegisterType((*DeletePhotoRequest)(nil), "photo.DeletePhotoRequest")
	proto.RegisterType((*DeletePhotoResponse)(nil), "photo.DeletePhotoResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for PhotoService service

type PhotoServiceClient interface {
	GetPhotos(ctx context.Context, in *GetPhotosRequest, opts ...grpc.CallOption) (*GetPhotosResponse, error)
	GetPhoto(ctx context.Context, in *GetPhotoRequest, opts ...grpc.CallOption) (*GetPhotoResponse, error)
	CreatePhoto(ctx context.Context, in *CreatePhotoRequest, opts ...grpc.CallOption) (*CreatePhotoResponse, error)
	UpdatePhoto(ctx context.Context, in *UpdatePhotoRequest, opts ...grpc.CallOption) (*UpdatePhotoResponse, error)
	DeletePhoto(ctx context.Context, in *DeletePhotoRequest, opts ...grpc.CallOption) (*DeletePhotoResponse, error)
}

type photoServiceClient struct {
	cc *grpc.ClientConn
}

func NewPhotoServiceClient(cc *grpc.ClientConn) PhotoServiceClient {
	return &photoServiceClient{cc}
}

func (c *photoServiceClient) GetPhotos(ctx context.Context, in *GetPhotosRequest, opts ...grpc.CallOption) (*GetPhotosResponse, error) {
	out := new(GetPhotosResponse)
	err := grpc.Invoke(ctx, "/photo.PhotoService/GetPhotos", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *photoServiceClient) GetPhoto(ctx context.Context, in *GetPhotoRequest, opts ...grpc.CallOption) (*GetPhotoResponse, error) {
	out := new(GetPhotoResponse)
	err := grpc.Invoke(ctx, "/photo.PhotoService/GetPhoto", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *photoServiceClient) CreatePhoto(ctx context.Context, in *CreatePhotoRequest, opts ...grpc.CallOption) (*CreatePhotoResponse, error) {
	out := new(CreatePhotoResponse)
	err := grpc.Invoke(ctx, "/photo.PhotoService/CreatePhoto", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *photoServiceClient) UpdatePhoto(ctx context.Context, in *UpdatePhotoRequest, opts ...grpc.CallOption) (*UpdatePhotoResponse, error) {
	out := new(UpdatePhotoResponse)
	err := grpc.Invoke(ctx, "/photo.PhotoService/UpdatePhoto", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *photoServiceClient) DeletePhoto(ctx context.Context, in *DeletePhotoRequest, opts ...grpc.CallOption) (*DeletePhotoResponse, error) {
	out := new(DeletePhotoResponse)
	err := grpc.Invoke(ctx, "/photo.PhotoService/DeletePhoto", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PhotoService service

type PhotoServiceServer interface {
	GetPhotos(context.Context, *GetPhotosRequest) (*GetPhotosResponse, error)
	GetPhoto(context.Context, *GetPhotoRequest) (*GetPhotoResponse, error)
	CreatePhoto(context.Context, *CreatePhotoRequest) (*CreatePhotoResponse, error)
	UpdatePhoto(context.Context, *UpdatePhotoRequest) (*UpdatePhotoResponse, error)
	DeletePhoto(context.Context, *DeletePhotoRequest) (*DeletePhotoResponse, error)
}

func RegisterPhotoServiceServer(s *grpc.Server, srv PhotoServiceServer) {
	s.RegisterService(&_PhotoService_serviceDesc, srv)
}

func _PhotoService_GetPhotos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPhotosRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhotoServiceServer).GetPhotos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/photo.PhotoService/GetPhotos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhotoServiceServer).GetPhotos(ctx, req.(*GetPhotosRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PhotoService_GetPhoto_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPhotoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhotoServiceServer).GetPhoto(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/photo.PhotoService/GetPhoto",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhotoServiceServer).GetPhoto(ctx, req.(*GetPhotoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PhotoService_CreatePhoto_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePhotoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhotoServiceServer).CreatePhoto(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/photo.PhotoService/CreatePhoto",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhotoServiceServer).CreatePhoto(ctx, req.(*CreatePhotoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PhotoService_UpdatePhoto_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePhotoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhotoServiceServer).UpdatePhoto(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/photo.PhotoService/UpdatePhoto",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhotoServiceServer).UpdatePhoto(ctx, req.(*UpdatePhotoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PhotoService_DeletePhoto_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePhotoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhotoServiceServer).DeletePhoto(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/photo.PhotoService/DeletePhoto",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhotoServiceServer).DeletePhoto(ctx, req.(*DeletePhotoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PhotoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "photo.PhotoService",
	HandlerType: (*PhotoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPhotos",
			Handler:    _PhotoService_GetPhotos_Handler,
		},
		{
			MethodName: "GetPhoto",
			Handler:    _PhotoService_GetPhoto_Handler,
		},
		{
			MethodName: "CreatePhoto",
			Handler:    _PhotoService_CreatePhoto_Handler,
		},
		{
			MethodName: "UpdatePhoto",
			Handler:    _PhotoService_UpdatePhoto_Handler,
		},
		{
			MethodName: "DeletePhoto",
			Handler:    _PhotoService_DeletePhoto_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/photo/main.proto",
}

func init() { proto.RegisterFile("proto/photo/main.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 631 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x54, 0xcf, 0x6a, 0xdb, 0x4e,
	0x10, 0x46, 0xfe, 0x93, 0x38, 0x23, 0xf3, 0x73, 0x32, 0xf9, 0xa7, 0x98, 0x5f, 0x89, 0xa3, 0x36,
	0x60, 0x72, 0x90, 0xa9, 0x5b, 0x72, 0xe8, 0x2d, 0xa4, 0xd0, 0x6b, 0x50, 0x1b, 0x7a, 0x28, 0xc5,
	0x6c, 0xac, 0xa9, 0x23, 0xe2, 0x68, 0x15, 0xed, 0x2a, 0x24, 0x94, 0x40, 0xe9, 0x2b, 0xf4, 0x25,
	0xfa, 0x3e, 0x3d, 0xf6, 0xda, 0x07, 0x29, 0x3b, 0x92, 0x1c, 0x59, 0x76, 0xe8, 0x45, 0xec, 0x7e,
	0x33, 0xf3, 0xed, 0xcc, 0xf7, 0x0d, 0x82, 0x9d, 0x38, 0x91, 0x5a, 0x0e, 0xe2, 0x4b, 0xf3, 0xbd,
	0x16, 0x61, 0xe4, 0x31, 0x80, 0x4d, 0x46, 0xba, 0xff, 0x4f, 0xa4, 0x9c, 0x4c, 0x69, 0x20, 0xe2,
	0x70, 0x20, 0xa2, 0x48, 0x6a, 0xa1, 0x43, 0x19, 0xa9, 0x2c, 0xa9, 0xbb, 0x9d, 0x15, 0xa7, 0x8a,
	0x92, 0x52, 0xad, 0xfb, 0xad, 0x06, 0xcd, 0x33, 0x53, 0x8e, 0xff, 0x41, 0x2d, 0x0c, 0x1c, 0xab,
	0x67, 0xf5, 0xd7, 0xfc, 0x5a, 0x18, 0xe0, 0x33, 0x80, 0x71, 0x42, 0x42, 0x53, 0x30, 0x12, 0xda,
	0xa9, 0xf5, 0xac, 0x7e, 0xdd, 0x5f, 0xcb, 0x91, 0x13, 0x6d, 0xc2, 0x69, 0x1c, 0x14, 0xe1, 0x7a,
	0x16, 0xce, 0x91, 0x13, 0x8d, 0x08, 0x8d, 0x48, 0x5c, 0x93, 0xd3, 0x60, 0x3e, 0x3e, 0xe3, 0x3a,
	0xd4, 0x55, 0x32, 0x76, 0x9a, 0x0c, 0x99, 0x23, 0x3a, 0xb0, 0x3a, 0x16, 0xb1, 0x69, 0xd3, 0x59,
	0x61, 0xb4, 0xb8, 0xe2, 0x01, 0xb4, 0x43, 0x35, 0x8a, 0xd3, 0x8b, 0x69, 0xa8, 0x2e, 0x29, 0x70,
	0x56, 0x7b, 0x56, 0xbf, 0xe5, 0xdb, 0xa1, 0x3a, 0x2b, 0xa0, 0x3c, 0x45, 0x44, 0x32, 0xba, 0xbf,
	0x96, 0xa9, 0x72, 0x5a, 0x45, 0xca, 0x49, 0x01, 0xe1, 0x73, 0x68, 0x98, 0x81, 0x1d, 0xe8, 0x59,
	0x7d, 0x7b, 0xd8, 0xf1, 0x26, 0x49, 0x3c, 0xf6, 0x0c, 0xe2, 0x9d, 0x2b, 0x4a, 0x7c, 0x0e, 0xba,
	0x1f, 0x61, 0xfd, 0x1d, 0x69, 0x16, 0x41, 0xf9, 0x74, 0x93, 0x92, 0xd2, 0xb8, 0x05, 0xcd, 0x9b,
	0x94, 0x92, 0xfb, 0x5c, 0x8f, 0xec, 0x62, 0x86, 0x8a, 0xc5, 0x84, 0x72, 0x31, 0xf8, 0x8c, 0x7b,
	0xd0, 0x8a, 0x29, 0x19, 0x31, 0x9e, 0xa9, 0xb0, 0x1a, 0x53, 0x72, 0x26, 0x26, 0xe4, 0xfe, 0xb4,
	0x60, 0xa3, 0xc4, 0xac, 0x62, 0x19, 0x29, 0xc2, 0x1e, 0x34, 0x02, 0xa1, 0x85, 0x63, 0xf5, 0xea,
	0x7d, 0x7b, 0xd8, 0xf6, 0xd8, 0x3c, 0x8f, 0x93, 0x7c, 0x8e, 0xe0, 0x3e, 0xd8, 0x5a, 0x6a, 0x31,
	0x1d, 0x8d, 0x65, 0x1a, 0x15, 0xd2, 0x03, 0x43, 0xa7, 0x06, 0x61, 0x71, 0xe9, 0x2e, 0x53, 0xdd,
	0x88, 0x4b, 0x77, 0x8c, 0x4d, 0x85, 0xd2, 0x85, 0xe0, 0xe6, 0x6c, 0xa6, 0xf8, 0x12, 0x26, 0x4a,
	0xe7, 0x92, 0x67, 0x17, 0x9e, 0x22, 0xa1, 0xdb, 0x5c, 0x71, 0x3e, 0xbb, 0x07, 0xd0, 0x29, 0x3a,
	0x2d, 0x24, 0xa8, 0xec, 0x83, 0xfb, 0xfa, 0x51, 0xa6, 0x25, 0xb3, 0x58, 0xcb, 0x67, 0x71, 0x8f,
	0x01, 0x4f, 0x79, 0x67, 0xe6, 0xb8, 0xff, 0xa9, 0x81, 0x7b, 0x08, 0x9b, 0x73, 0x75, 0xf9, 0x83,
	0xd5, 0xa6, 0x8e, 0x01, 0xcf, 0x79, 0xe7, 0x9e, 0xa0, 0xb7, 0x9e, 0xa6, 0x9f, 0xab, 0x7b, 0xa4,
	0x97, 0x57, 0x5c, 0xd6, 0xf2, 0x6b, 0xf2, 0xca, 0x7d, 0x01, 0xf8, 0x96, 0xa6, 0x54, 0xa1, 0xaf,
	0x36, 0x71, 0x08, 0x9b, 0x73, 0x59, 0xcb, 0xc9, 0x86, 0xbf, 0xeb, 0xd0, 0xe6, 0x8c, 0xf7, 0x94,
	0xdc, 0x86, 0x63, 0x42, 0x1f, 0xd6, 0x66, 0xeb, 0x81, 0xbb, 0x79, 0x97, 0xd5, 0x55, 0xec, 0x3a,
	0x8b, 0x81, 0xec, 0x01, 0x17, 0xbf, 0xff, 0xfa, 0xf3, 0xa3, 0xd6, 0x46, 0x18, 0xdc, 0xbe, 0xcc,
	0xfe, 0x0a, 0x0a, 0x3f, 0x40, 0xab, 0x48, 0xc4, 0x9d, 0x4a, 0x65, 0xc1, 0xb8, 0xbb, 0x80, 0xe7,
	0x84, 0xbb, 0x4c, 0xb8, 0x81, 0x9d, 0x47, 0xc2, 0xc1, 0xd7, 0x30, 0x78, 0xc0, 0x4f, 0x60, 0x97,
	0xdc, 0xc0, 0xbd, 0x9c, 0x60, 0xd1, 0xd9, 0x6e, 0x77, 0x59, 0x28, 0xa7, 0xdf, 0x66, 0xfa, 0x8e,
	0x5b, 0xea, 0xf7, 0x8d, 0x75, 0x84, 0x04, 0x76, 0xc9, 0x8b, 0x19, 0xf9, 0xa2, 0xaf, 0x33, 0xf2,
	0x25, 0xd6, 0xb9, 0xfb, 0x4c, 0xbe, 0x37, 0xdc, 0x2a, 0xf7, 0x6e, 0xbc, 0xf6, 0xc2, 0xe0, 0xc1,
	0x3c, 0xf3, 0x19, 0xec, 0x92, 0x4b, 0xb3, 0x67, 0x16, 0xfd, 0x9d, 0x3d, 0xb3, 0xc4, 0xd4, 0x42,
	0xa2, 0xa3, 0xaa, 0x44, 0x17, 0x2b, 0xfc, 0x3f, 0x7d, 0xf5, 0x37, 0x00, 0x00, 0xff, 0xff, 0xa5,
	0xfc, 0xa9, 0x6b, 0xa5, 0x05, 0x00, 0x00,
}
