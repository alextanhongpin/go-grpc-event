syntax = "proto3";

package photo;

import "google/api/annotations.proto";
import "proto/user/main.proto";
// import "google/protobuf/empty.proto";

service PhotoService {
  rpc GetPhotos (GetPhotosRequest) returns (GetPhotosResponse) {
    option (google.api.http) = {
      get: "/v1/photos"
    };
  }
  rpc GetPhoto (GetPhotoRequest) returns (GetPhotoResponse) {
    option (google.api.http) = {
      get: "/v1/photos/{id}"
    };
  }
  rpc CreatePhoto (CreatePhotoRequest) returns (CreatePhotoResponse) {
    option (google.api.http) = {
      post: "/v1/photos",
      body: "*"
    };
  }

  rpc UpdatePhoto (UpdatePhotoRequest) returns (UpdatePhotoResponse) {
    option (google.api.http) = {
      patch: "/v1/photos/{data.id}",
      body: "*"
    };
  }

  rpc DeletePhoto (DeletePhotoRequest) returns (DeletePhotoResponse) {
    option (google.api.http) = {
      delete: "/v1/photos/{id}"
    };
  }
}

message Photo {
  string id = 1;
  // @inject_tag: bson:"created_at"
  int64 created_at = 2;
  // @inject_tag: bson:"updated_at"
  int64 updated_at = 3;
  string name = 4;
  string src = 5;
  string caption = 6;
  // @inject_tag: bson:"is_published"
  bool is_published = 7;
  // @inject_tag: bson:"is_anonymous"
  bool is_anonymous = 8;
  grpc.user.User user = 10;
}

message GetPhotosRequest {
  string query = 1;
  int64 page = 2;
  // @inject_tag: bson:"per_page"
  int64 per_page = 3;
}

message GetPhotosResponse {
  repeated Photo data = 1;
  // @inject_tag: bson:"total_count"
  int64 total_count = 2;
  string next = 3;
  string last = 4;
  string first = 5;
  string prev = 6;
}

message GetPhotoRequest {
  string id = 1;
}

message GetPhotoResponse {
  Photo data = 1;
}

message CreatePhotoRequest {
  repeated Photo data = 1;
}

message CreatePhotoResponse {
  string id = 1;
}

message UpdatePhotoRequest {
  Photo data = 1;
}

message UpdatePhotoResponse {
  bool ok = 1;
}

message DeletePhotoRequest {
  string id = 1;
}

message DeletePhotoResponse {
  bool ok = 1;
}